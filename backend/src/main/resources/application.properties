spring.application.name=image-toolkit

# Database Configuration for Neon Postgres
spring.datasource.url=${DB_URL:jdbc:postgresql://ep-jolly-lab-a28utrw7-pooler.eu-central-1.aws.neon.tech/main-db?sslmode=require}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME:drzokg7bb}
cloudinary.api-key=${CLOUDINARY_API_KEY:683266267847728}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Enable PostgreSQL enum types
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=30000

# Server Configuration
server.port=8080

# Logging Configuration
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Flyway Configuration
spring.flyway.database=postgresql
spring.flyway.enabled=true
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

app.rabbitmq.exchange-name=image_processing_exchange
app.rabbitmq.queues.bg-removal.name=q_bg_removal
app.rabbitmq.queues.bg-removal.routing-key=job.bg_removal
app.rabbitmq.queues.upscaling.name=q_upscaling
app.rabbitmq.queues.upscaling.routing-key=job.upscaling

# JWT Configuration
app.jwt.secret=supersecretjwtkeyfortesting12345678901234567890123456789012
app.jwt.expiration-ms=864000000

# Enable scheduling for cleanup service
spring.task.scheduling.enabled=true